{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setdisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","console","log","useEffect","prevCards","resetTurn","setTimeout","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAwBeA,EArBI,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SAQhD,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBAAKF,UAAU,OACfG,QAXY,WACbJ,GACHF,EAAaD,EAEhB,EAQOM,IAAI,SAKX,EClBKE,EAAa,CACjB,CAAE,IAAO,sCAAuCC,SAAS,GACzD,CAAE,IAAO,uCAAwCA,SAAS,GAC1D,CAAE,IAAO,0CAA2CA,SAAS,GAC7D,CAAE,IAAO,2CAA4CA,SAAS,GAC9D,CAAE,IAAO,yCAA0CA,SAAS,GAC5D,CAAE,IAAO,yCAA0CA,SAAS,IAoF/CC,MAjFf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAGMC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAeA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,EAAtB,IACLC,KAAI,SAAC1B,GAAD,mBAAC,eAAcA,GAAf,IAAqB2B,GAAIH,KAAKC,UAA9B,IAEPR,EAAa,MACbE,EAAa,MACbN,EAASS,GACTP,EAAS,EACV,EAEKd,EAAe,SAACD,GACpB4B,QAAQC,IAAI7B,GACZgB,EAAYG,EAAanB,GAAQiB,EAAajB,EAC/C,EAID8B,qBAAU,WACJd,GAAaE,IACfE,GAAY,GAERJ,EAAUX,MAAQa,EAAUb,KAC9BQ,GAAS,SAAAkB,GACP,OAAOA,EAAUL,KAAI,SAAA1B,GACnB,OAAIA,EAAKK,MAAQW,EAAUX,IAClB,2BAAIL,GAAX,IAAiBS,SAAS,IAEnBT,CAEV,GACF,IACDgC,KAEAC,YAAW,kBAAMD,GAAN,GAAmB,KAGnC,GAAE,CAAChB,EAAWE,IAGf,IAAMc,EAAY,WAChBf,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAmB,GAAS,OAAIA,EAAY,CAAhB,IAClBd,GAAY,EACb,EAOD,OALAU,qBAAU,WACRT,GACD,GAAE,IAID,sBAAKjB,UAAU,MAAf,UACE,uDACA,wBAAQG,QAASc,EAAjB,yBAEA,qBAAKjB,UAAU,YAAf,SACGQ,EAAMc,KAAI,SAAA1B,GAAI,OACb,cAAC,EAAD,CAEAA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASgB,GAAahB,IAASkB,GAAalB,EAAKS,QAC1DN,SAAUA,GAJLH,EAAK2B,GAFG,MAUjB,yCAAYb,OAGjB,ECvFDqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,Q","file":"static/js/main.15d66ced.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./SingleCard.css\"\r\n\r\nconst SingleCard = ({card, handleChoice, flipped, disabled}) => {\r\n\r\nconst handleClick = () => {\r\n  if (!disabled) {\r\n    handleChoice(card)\r\n  }\r\n}\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className={flipped ? \"flipped\" : \"\"}>\r\n        <img className=\"front\" src={card.src} alt=\"card front\" />\r\n        <img className=\"back\" \r\n        onClick={handleClick}\r\n        alt=\"\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SingleCard","import { useState, useEffect } from \"react\"\nimport './App.css'\nimport SingleCard from \"./components/SingleCard\"\n\nconst cardImages = [\n  { \"src\": \"./pexeso_rodinka/public/img/babicka\", matched: false },\n  { \"src\": \"./pexeso_rodinka/public/img/deda.jpg\", matched: false },\n  { \"src\": \"./pexeso_rodinka/public/img/jonasek.jpg\", matched: false },\n  { \"src\": \"./pexeso_rodinka/public/img/pajaluky.jpg\", matched: false },\n  { \"src\": \"./pexeso_rodinka/public/img/zuzka1.jpg\", matched: false },\n  { \"src\": \"./pexeso_rodinka/public/img/zuzka2.jpg\", matched: false },\n]\n\nfunction App() {\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n  const [disabled, setdisabled] = useState(false)\n\n  ////////////// shuffle cards\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({...card, id: Math.random() }))\n\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setCards(shuffledCards)\n    setTurns(0)\n  }\n  //////////// handle choice\n  const handleChoice = (card) => {\n    console.log(card)\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n  //compare two selected cards (funkce v useEffect se spůstí na začátku \n  // a vždy když zavoláme choiceOne a choiceTwo)\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setdisabled(true)\n\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {...card, matched: true}\n            } else {\n              return card\n            }\n          })\n        })\n        resetTurn()\n      } else {\n        setTimeout(() => resetTurn(), 1000)\n      }\n    }\n  }, [choiceOne, choiceTwo])\n\n  // reset choices and increase turn\n  const resetTurn = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurns => prevTurns + 1)\n    setdisabled(false)\n  }\n\n  useEffect(() => {\n    shuffleCards()\n  }, [])\n  \n\n  return (\n    <div className=\"App\">\n      <h1>Pexeso - rodinka :-) </h1>\n      <button onClick={shuffleCards}>Nová hra</button>\n\n      <div className=\"card-grid\">\n        {cards.map(card => (\n          <SingleCard \n          key={card.id} \n          card={card}\n          handleChoice={handleChoice}\n          flipped={card === choiceOne || card === choiceTwo || card.matched }\n          disabled={disabled}\n          />\n        ))}\n      </div>\n      <p>Pokusy: {turns}</p>\n    </div>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}